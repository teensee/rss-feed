#!/bin/bash

# üîπ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ .env
if [ -f .env ]; then
    echo "üöÄ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ .env —Ñ–∞–π–ª–∞."
    export $(cat .env | grep -v '#' | xargs)
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≤—Å–µ—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
if [ -z "$SSH_USER" ] || [ -z "$SSH_HOST" ] || [ -z "$SSH_PORT" ] || [ -z "$DOCKERHUB_USER" ] || [ -z "$IMAGE_NAME" ] || [ -z "$TAG" ] || [ -z "$CONTAINER_NAME" ]; then
    echo "‚ùó –û—à–∏–±–∫–∞: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ .env —Ñ–∞–π–ª–µ."
    exit 1
fi

# üîπ 1. –°–±–æ—Ä–∫–∞ Docker-–æ–±—Ä–∞–∑–∞
echo "üöÄ –°–±–æ—Ä–∫–∞ Docker-–æ–±—Ä–∞–∑–∞..."
docker build --platform linux/amd64 -t $DOCKERHUB_USER/$IMAGE_NAME:$TAG -f docker/golang/Dockerfile .
#docker build --platform linux/arm64 -t $DOCKERHUB_USER/$IMAGE_NAME:$TAG -f docker/golang/Dockerfile .

# üîπ 2. –õ–æ–≥–∏–Ω –≤ Docker Hub
echo "üîë –í—Ö–æ–¥ –≤ Docker Hub..."
echo "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è Docker Hub:"
docker login docker.io -u $DOCKERHUB_USER

# üîπ 3. –ü—É—à–∏–º –æ–±—Ä–∞–∑ –≤ Docker Hub
echo "üì§ –ü—É—à–∏–º –æ–±—Ä–∞–∑ –≤ Docker Hub..."
docker push $DOCKERHUB_USER/$IMAGE_NAME:$TAG

# üîπ 4. –î–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä –ø–æ SSH
echo "üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É –ø–æ SSH –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
ssh -tt -p $SSH_PORT $SSH_USER@$SSH_HOST << EOF
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (–µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å)..."
    docker stop $CONTAINER_NAME || true
    docker rm $CONTAINER_NAME || true

    echo "üì• Pull –æ–±—Ä–∞–∑–∞..."
    docker pull $DOCKERHUB_USER/$IMAGE_NAME:$TAG

    echo "üöÄ –ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
    docker run -d --rm --name $CONTAINER_NAME -p $DOCKER_RSS_PORT:$DOCKER_RSS_INTERNAL_PORT $DOCKERHUB_USER/$IMAGE_NAME:$TAG
    exit
EOF

echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"
